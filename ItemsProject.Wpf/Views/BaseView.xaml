<views:MvxWpfView
    xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
    xmlns:mvx="clr-namespace:MvvmCross.Platforms.Wpf.Binding;assembly=MvvmCross.Platforms.Wpf"
    x:Class="ItemsProject.Wpf.Views.BaseView"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:conv="clr-namespace:ItemsProject.Wpf.Converters"
    xmlns:helpers="clr-namespace:ItemsProject.Wpf.Helper_Functions"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:local="clr-namespace:ItemsProject.Wpf.Views" xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.AeroLite"
    mc:Ignorable="d" 
    FontSize="22"
    x:Name="root"
    FontFamily="pack://application:,,,/WheelsVault;component/Assets/Fonts/#Fredoka Medium"        
    d:DesignHeight="1080" d:DesignWidth="1920" IsHitTestVisible="{Binding IsWindowEnabled}">

    <views:MvxWpfView.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <materialDesign:CustomColorTheme BaseTheme="Light" PrimaryColor="#00AEEF" SecondaryColor="#2C84C7"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesign2.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <conv:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter"/>
            <conv:BooleanInverseConverter x:Key="BooleanInverseConverter"/>
            <conv:BooleanVisibilityConverterInverse x:Key="BooleanVisibilityConverterInverse"/>
            <conv:MultiBindingConverter x:Key="MultiBindingConverter"/>
            <conv:MultiBooleanVisibilityConverter x:Key="MultiBooleanVisibilityConverter"/>

            <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="Transparent" Offset="0.0"/>
                <GradientStop Color="Transparent" Offset="1.0"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Static.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
            <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="Transparent" Offset="0.0"/>
                <GradientStop Color="Transparent" Offset="1.0"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#33414c"/>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="Transparent"/>
            <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="Transparent" Offset="0.0"/>
                <GradientStop Color="Transparent" Offset="1.0"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="Transparent"/>
            <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFDAECFC" Offset="0.0"/>
                <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#33414c"/>
            <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="Transparent"/>
            <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="Transparent" Offset="0.0"/>
                <GradientStop Color="Transparent" Offset="1.0"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#33414c"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
            <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="ClickMode" Value="Press"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border CornerRadius="0" x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="0" SnapsToDevicePixels="true">
                                <Border x:Name="splitBorder" CornerRadius="0" BorderBrush="Transparent" BorderThickness="0" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                    <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                    <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                    <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                    <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                    <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="ComboBoxTemplate1" TargetType="{x:Type ComboBox}">
                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                    </Grid.ColumnDefinitions>
                    <Popup IsHitTestVisible="False"
                       StaysOpen="False"
                       x:Name="PART_Popup" AllowsTransparency="true"
                       Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                       Margin="0"
                       Placement="Custom"
                       CustomPopupPlacementCallback="CustomPopupPlacementCallback"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <Border CornerRadius="4" Margin="0" x:Name="dropDownBorder" Background="#556D7E" BorderThickness="2" BorderBrush="#CCCCCCCC">
                            <ScrollViewer HorizontalScrollBarVisibility="Disabled" Margin="0" x:Name="DropDownScrollViewer">
                                <Grid Margin="0" x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas Margin="0" x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle Margin="0" x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter Margin="0" x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                    <ToggleButton x:Name="toggleButton"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="0"
                      Grid.ColumnSpan="2"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                      Style="{StaticResource ComboBoxToggleButton}"/>
                    <ContentPresenter x:Name="contentPresenter"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            IsHitTestVisible="False" Margin="0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    </ContentPresenter>
                    <TextBlock 
                        Foreground="Black"
                        Padding="10 6"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        IsHitTestVisible="False">
                        
                        
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <TextBlock 
            Grid.Column="0"                                    
            Text="&#xf0d9;" 
            Margin="2 0 0 0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            FontFamily="pack://application:,,,/Assets/Fonts/#Font Awesome 6 Free Solid" 
            FontSize="16"/>
        <TextBlock
            Margin="12 0 0 0"
            Grid.Column="1"
            VerticalAlignment="Center"
            Text="Add To Folder"
            FontSize="18"/>
    </Grid>
    
            </TextBlock>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasItems" Value="false">
                        <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="true"/>
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                    </MultiTrigger>
                    <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                        <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                        <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
        
        
    </views:MvxWpfView.Resources>

    <materialDesign:Card
        materialDesign:UniformCornerRadius="6">
        <Grid
            x:Name="mainGrid"
            Focusable="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.15*" MinWidth="200"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="0.15*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock
                Grid.Row="0"
                Grid.Column="0"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Margin="0 30 0 0"
                FontSize="22"
                Text="HotWheels Collection"
                Foreground="#087cbc">
                </TextBlock>

                <TextBlock
                Grid.Row="1"
                Grid.Column="0"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Margin="0 0 0 0"
                FontSize="20"
                Text="Manager"
                Foreground="#087cbc">
                </TextBlock>

                <TextBlock
                FontSize="16"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Grid.Row="2"
                Margin="0 0 0 5"
                Foreground="#888">
                <Run Text="Version: "/>
                <Run Text="{Binding AppVersion}"/>
                </TextBlock>
            </Grid>

            <Grid x:Name="actualGridWidth" 
              Grid.Row="1"
              Grid.RowSpan="2"
              Grid.Column="0">
                <Grid.Background>
                    <SolidColorBrush Color="#e6e6e6" Opacity="1"/>
                </Grid.Background>

                <Grid.RowDefinitions>
                    <RowDefinition Height="0.1*" MinHeight="90"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Button
                    MinHeight="35"
                    FontSize="20"
                    Padding="30 0 30 0"
                    MaxWidth="180"
                    Margin="0 30 0 0"
                    HorizontalContentAlignment="Stretch"
                    materialDesign:ButtonAssist.CornerRadius="5"
                    materialDesign:ElevationAssist.Elevation="Dp2"
                    Command="{Binding OpenAddFolderWindowCommand}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#217bca"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <TextBlock>
                            <TextBlock
                                VerticalAlignment="Center"
                                Text="+ Add Folder"/>
                    </TextBlock>
                </Button>

                <ListView Margin="0 20 0 0"
                      x:Name="folderListView"
                      BorderThickness="0"
                      ItemsSource="{Binding Folders}"
                      HorizontalAlignment="Center"
                      SelectedItem="{Binding SelectedFolder, Mode=TwoWay}"
                      AlternationCount="99"
                      Grid.Row="1"
                      Grid.Column="0"
                      Focusable="False"
                      Background="Transparent">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem" BasedOn="{StaticResource MaterialDesignNavigationSecondaryListBoxItem}">
                            <Setter Property="Margin" Value="0 2"/>
                            <Setter Property="materialDesign:ListBoxItemAssist.CornerRadius" Value="5"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>

                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Name="OriginalFolderName"
                                       Width="155"
                                       FontSize="20"
                                       materialDesign:TextBlockAssist.AutoToolTip="True"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Style="{StaticResource MaterialDesignBody2TextBlock}"
                                        materialDesign:ListBoxItemAssist.SelectedUnfocusedBackground="red"
                                       Margin="2 1 0 0"
                                       TextTrimming="CharacterEllipsis"
                                       Grid.Column="0" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       ToolTip="{Binding Name}" ToolTipService.InitialShowDelay="100"
                                       Visibility="{Binding IsEditing,
                                                    Converter={StaticResource BooleanVisibilityConverterInverse}}"/>

                                <StackPanel
                                    Orientation="Horizontal">
                                    <TextBox x:Name="EditFolderNameTextBox" 
                                         Style="{StaticResource MaterialDesignDataGridComboBoxEditableTextBox}"
                                         Text="{Binding DataContext.EditingFolderName, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         Height="{Binding ElementName=OriginalFolderName, Path=ActualHeight}"
                                         Width="120"
                                         FontSize="20"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Visibility="{Binding IsEditing,
                                                              Converter={StaticResource BooleanVisibilityConverter}}"
                                         IsVisibleChanged="EditFolderNameTextBox_IsVisibleChanged">
                                        <TextBox.InputBindings>
                                            <KeyBinding
                                            Key="Esc"
                                            Command="{Binding DataContext.CancelFolderEditCommand, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}}"
                                            CommandParameter="{Binding .}"/>
                                            <KeyBinding
                                            Key="Enter"
                                            Command="{Binding DataContext.SaveEditFolderCommand, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}}"
                                            CommandParameter="{Binding .}"/>
                                        </TextBox.InputBindings>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="LostFocus">
                                                <i:InvokeCommandAction Command="{Binding DataContext.CancelFolderEditCommand,
                                                                             RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}}"
                                                                   CommandParameter="{Binding .}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>

                                    <Button x:Name="SaveEditBtnIcon"
                                        Focusable="False"
                                        HorizontalAlignment="Right"
                                        Command="{Binding DataContext.SaveEditFolderCommand, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}}"
                                        CommandParameter="{Binding .}"
                                        Visibility="{Binding IsEditing,
                                                    Converter={StaticResource BooleanVisibilityConverter}}"
                                        IsEnabled="{Binding DataContext.CanSaveFolderEdit, RelativeSource={RelativeSource AncestorType=views:MvxWpfView}}"
                                        Margin="4 0 8 0">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="Foreground" Value="#4CAF50"/>
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Button">
                                                            <Grid>
                                                                <Border Padding="{TemplateBinding Padding}" 
                                                                    Background="{TemplateBinding Background}" CornerRadius="6" BorderThickness="2 0 2 4">
                                                                    <TextBlock Name="TextBlock" FontSize="20" Text="&#xf00c;" 
                                                                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                               FontFamily="pack://application:,,,/Assets/Fonts/#Font Awesome 6 Free Solid"
                                                                               Foreground="{TemplateBinding Foreground}" />
                                                                </Border>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Cursor" Value="Hand"/>
                                                                    <Setter Property="Foreground" Value="#388E3C" />
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="TextBlock.Opacity" Value="0.4"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>

                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=(ItemsControl.AlternationIndex)}" Value="0">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </StackPanel>

                                <Button Name="EditFolderIconBtn"
                                    HorizontalAlignment="Right"
                                    Command="{Binding DataContext.EditModeFoldersCommand, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=DataContext}"
                                    IsEnabled="{Binding IsEditing,
                                                Converter={StaticResource BooleanInverseConverter}}"
                                    Grid.Column="1"
                                    Margin="0 0 8 0">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Foreground" Value="#A0A0A0"/>
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <Grid>
                                                            <Border Padding="{TemplateBinding Padding}" 
                                                            Background="{TemplateBinding Background}" CornerRadius="6" BorderThickness="2 0 2 4">
                                                                <TextBlock Name="TextBlock" FontSize="18" Text="&#xf044;" 
                                                                       HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                       FontFamily="pack://application:,,,/Assets/Fonts/#Font Awesome 6 Free Solid"
                                                                       Foreground="{TemplateBinding Foreground}" />
                                                            </Border>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Cursor" Value="Hand"/>
                                                                <Setter Property="Foreground" Value="#0078D7" />
                                                            </Trigger>

                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="#0078D7" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=(ItemsControl.AlternationIndex)}" Value="0">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <Button Name="DeleteFolderIconBtn" Command="{Binding DataContext.OpenDeleteFolderConfirmationCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:IMvxWpfView}}}"
                                    CommandParameter="{Binding}"                                    
                                    BorderThickness="0"
                                    Grid.Column="2" HorizontalAlignment="Right">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Foreground" Value="#A0A0A0"/>
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <Grid>
                                                            <Border Padding="{TemplateBinding Padding}" 
                                                                Background="{TemplateBinding Background}" CornerRadius="6" BorderThickness="2 0 2 4">
                                                                <TextBlock Name="TextBlock" FontSize="18" Text="&#xf1f8;" 
                                                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                                               FontFamily="pack://application:,,,/Assets/Fonts/#Font Awesome 6 Free Solid"
                                                               Foreground="{TemplateBinding Foreground}" />
                                                            </Border>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Cursor" Value="Hand"/>
                                                                <Setter Property="Foreground" Value="#d73b3e" />
                                                            </Trigger>

                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="Transparent"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=(ItemsControl.AlternationIndex)}" Value="0">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>

            <Grid 
                Margin="40 15 0 0"
                Grid.Row="0"
                x:Name="gridRight"
                Grid.RowSpan="2"
                Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.15*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid
                    Width="{Binding ActualWidth, ElementName=gridRight}"
                    Grid.Row="0"
                    Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel
                        Margin="20 0 0 0"
                        Grid.Column="0"
                        Orientation="Horizontal">
                        <TextBox
                            Height="30"
                            Name="searchTextBox"
                            Style="{StaticResource MaterialDesignFilledTextBox}"
                            materialDesign:TextFieldAssist.HasClearButton="True"
                            materialDesign:TextFieldAssist.OutlinedBorderActiveThickness="4"
                            materialDesign:TextFieldAssist.UnderlineCornerRadius="4"
                            materialDesign:TextFieldAssist.HasLeadingIcon="True"
                            materialDesign:TextFieldAssist.LeadingIcon="Search"
                            Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            FontSize="20"
                            Padding="10 0"
                            Grid.Column="0"
                            MaxWidth="400"
                            Width="200"
                            Margin="10 0 40 0"/>

                        <StackPanel
                            Orientation="Horizontal"
                            Grid.Row="1" 
                            Grid.Column="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <ComboBox
                                Height="30"
                                x:Name="comboBoxSort"
                                Style="{StaticResource MaterialDesignFilledComboBox}"
                                IsEnabled="{Binding IsFolderSelected}"
                                ItemsSource="{Binding SortOptions}"
                                materialDesign:TextFieldAssist.HasLeadingIcon="True"
                                materialDesign:TextFieldAssist.LeadingIcon="Sort"
                                SelectedItem="{Binding SelectedSortOption}"
                                VerticalAlignment="Top"
                                Padding="10 0"
                                Margin="10 0 0 0"
                                Width="200"
                                Focusable="True">

                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock
                                            Text="{Binding}"
                                            FontSize="18"
                                            HorizontalAlignment="Center"
                                            Foreground="#09203F"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                    </StackPanel>

                    <StackPanel
                        Grid.Column="1"
                        Margin="0 0 40 0"
                        Orientation="Horizontal"
                        HorizontalAlignment="Right">
                        <TextBox
                            Style="{StaticResource MaterialDesignFilledTextBox}"
                            materialDesign:TextFieldAssist.OutlinedBorderActiveThickness="4"
                            materialDesign:TextFieldAssist.UnderlineCornerRadius="4"
                            materialDesign:TextFieldAssist.HasLeadingIcon="True"
                            materialDesign:TextFieldAssist.LeadingIcon="Add"
                            x:Name="hotwheelsAddTextBox"                    
                            FontSize="20"
                            Width="300"
                            Height="30"
                            Padding="10 0"
                            Text="{Binding SearchhwText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            TextAlignment="Left"
                            Foreground="Gray"
                            IsEnabled="{Binding IsFolderSelected}"
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"
                            HorizontalContentAlignment="Center"
                            HorizontalAlignment="Right"
                            Margin="0 0 40 0"
                            LostFocus="hotwheelsAddTextBox_LostFocus"
                            GotFocus="hotwheelsAddTextBox_GotFocus"
                            PreviewLostKeyboardFocus="hotwheelsAddTextBox_PreviewLostKeyboardFocus"
                            PreviewMouseDown="hotwheelsAddTextBox_PreviewMouseDown">
                        </TextBox>

                        <materialDesign:PopupBox
                            x:Name="hotWheelsPopup" 
                            materialDesign:IsPopupOpen="{Binding IsPopupHwOpened, Mode=OneWay}"
                            StaysOpen="True"
                            materialDesign:PlacementMode="BottomAndAlignRightEdges"
                            PopupHorizontalOffset="-35"
                            PopupVerticalOffset="10">
                            <materialDesign:PopupBox.ToggleContent>
                                <materialDesign:PackIcon
                                    IsHitTestVisible="False"
                                    Kind="None"
                                    Width="0">
                                </materialDesign:PackIcon>
                            </materialDesign:PopupBox.ToggleContent>

                            <ListBox
                                x:Name="searchResultListBox"
                                Style="{StaticResource MaterialDesignNavigationListBox}"
                                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                ItemsSource="{Binding SearchhwResult}"
                                MaxHeight="400"
                                ScrollViewer.VerticalScrollBarVisibility="Disabled">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignCardsListBoxItem}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListBoxItem">
                                                    <ContentPresenter/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Margin" Value="8"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Button
                                            Height="100"
                                            Style="{StaticResource MaterialDesignFlatSecondaryButton}"
                                            materialDesign:RippleAssist.IsDisabled="True"
                                            Command="{Binding DataContext.AddHotWheelsCommand, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}}"
                                            CommandParameter="{Binding .}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch">
                                            <Grid
                                                x:Name="mainItemGrid"
                                                Height="100"
                                                Width="700">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="100"/>
                                                    <ColumnDefinition Width="180"/>
                                                    <ColumnDefinition Width="100"/>
                                                    <ColumnDefinition Width="160"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <Image
                                                    Grid.Column="0"
                                                    Margin="10 0 0 0"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Center"
                                                    ToolTipService.InitialShowDelay="0"
                                                    Source="{Binding PhotoURL}">
                                                    <Image.ToolTip>
                                                        <ToolTip
                                                            Placement="Left">
                                                            <Image Source="{Binding PhotoURL}" Width="350"/>
                                                        </ToolTip>
                                                    </Image.ToolTip>
                                                </Image>

                                                <TextBlock
                                                    Margin="10 0 0 0"
                                                    Foreground="#09203F"
                                                    FontSize="18"
                                                    VerticalAlignment="Center"
                                                    TextWrapping="Wrap"
                                                    Grid.Column="1"
                                                    Text="{Binding ModelName}"
                                                    HorizontalAlignment="left">
                                                </TextBlock>

                                                <Grid
                                                    Margin="10 0 0 10"
                                                    HorizontalAlignment="Left"
                                                    Height="{Binding Path=ActualHeight, ElementName=mainItemGrid}"
                                                    Grid.Column="2">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="auto"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock
                                                        Margin="0 8 0 0"
                                                        Grid.Row="0"
                                                        FontSize="16"
                                                        Text="Prod. Year"
                                                        Foreground="#9009203F"
                                                        HorizontalAlignment="center"
                                                        VerticalAlignment="Top">
                                                    </TextBlock>

                                                    <TextBlock
                                                        Grid.Row="1"
                                                        Margin="0 0 0 10"
                                                        Foreground="#09203F"
                                                        FontSize="18"
                                                        VerticalAlignment="Center"
                                                        TextWrapping="Wrap"
                                                        Text="{Binding YearProduced}"
                                                        HorizontalAlignment="Center">
                                                    </TextBlock>
                                                </Grid>

                                                <Grid
                                                    HorizontalAlignment="Center"
                                                    Margin="0 0 0 10"
                                                    Height="{Binding Path=ActualHeight, ElementName=mainItemGrid}"
                                                    Grid.Column="3">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="auto"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock
                                                        Grid.Row="0"
                                                        Margin="0 8 0 0"
                                                        FontSize="16"
                                                        Text="Series"
                                                        Foreground="#9009203F"
                                                        HorizontalAlignment="center"
                                                        VerticalAlignment="Top">
                                                    </TextBlock>

                                                    <TextBlock
                                                        Grid.Row="1"
                                                        Margin="10 0 0 10"
                                                        Foreground="#09203F"
                                                        FontSize="18"
                                                        VerticalAlignment="Center"
                                                        TextWrapping="Wrap"
                                                        Text="{Binding SeriesName}"
                                                        HorizontalAlignment="Center">
                                                    </TextBlock>
                                                </Grid>

                                                <Grid
                                                    HorizontalAlignment="Center"
                                                    Margin="0 0 0 0"
                                                    Height="{Binding Path=ActualHeight, ElementName=mainItemGrid}"
                                                    Grid.Column="4">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="auto"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock
                                                        Grid.Row="0"
                                                        Margin="0 8 0 0"
                                                        FontSize="16"
                                                        Text="Toy Code"
                                                        Foreground="#9009203F"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Top">
                                                    </TextBlock>

                                                    <TextBlock
                                                        Grid.Row="1"
                                                        Margin="0 0 0 10"
                                                        Foreground="#09203F"
                                                        FontSize="18"
                                                        VerticalAlignment="Center"
                                                        TextWrapping="Wrap"
                                                        Text="{Binding ToyNum}"
                                                        HorizontalAlignment="Center">
                                                    </TextBlock>
                                                </Grid>

                                                <Border
                                                    x:Name="separationBorder"
                                                    Grid.ColumnSpan="5"
                                                    Grid.Column="0"
                                                    Margin="0 0 38 0"
                                                    BorderThickness="0 0 0 2"
                                                    BorderBrush="#4009203F"
                                                    CornerRadius="4">
                                                </Border>
                                            </Grid>
                                        </Button>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </materialDesign:PopupBox>

                        <Button 
                        FontSize="20"
                        MinHeight="35"
                        Padding="30 0 30 0"
                        IsEnabled="{Binding IsFolderSelected}"
                        materialDesign:ButtonAssist.CornerRadius="5"
                        HorizontalAlignment="Right"
                        Margin="0 0 0 0"
                        mvx:Bi.nd="Command OpenAddItemWindowCommand">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#217bca"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <TextBlock Text="+ Custom Item">
                            </TextBlock>
                        </Button>
                    </StackPanel>
                </Grid>

                <WrapPanel
                Grid.Row="1"
                Margin="30 0 0 0"
                VerticalAlignment="Top"
                Orientation="Horizontal">
                    <StackPanel
                    Orientation="Horizontal">
                        <TextBlock
                        Foreground="#666"
                        FontSize="18"
                        Text="Unique HotWheels: "/>
                        <TextBlock
                        Foreground="#666"
                        FontSize="18"
                        Text="{Binding TotalHotWheelsCount}"/>
                    </StackPanel>

                    <StackPanel
                    Margin="30 0 0 0"
                    Orientation="Horizontal">
                        <TextBlock
                        Foreground="#666"
                        FontSize="18"
                        Text="Total Cars: "/>
                        <TextBlock
                        Foreground="#666"
                        FontSize="18"
                        Text="{Binding TotalCarsCount}"/>
                    </StackPanel>

                    <StackPanel 
                    Visibility="{Binding IsFolderSelected, Converter={StaticResource BooleanVisibilityConverter}}"
                    Margin="30 0 0 0"
                    Orientation="Horizontal">
                        <TextBlock
                        Foreground="#666"
                        FontSize="18">
                        <Run
                            Text="'"/>
                        <Run
                            Text="{Binding SelectedFolder.Name}"/>
                        <Run
                            Text="' "/>
                        </TextBlock>
                        <TextBlock
                        Foreground="#666"
                        FontSize="18"
                        Text=" Count: "/>
                        <TextBlock
                        Foreground="#666"
                        FontSize="18"
                        Text="{Binding TotalFolderCarsCount}"/>
                    </StackPanel>
                </WrapPanel>

                <ListView
                    x:Name="carCollectionList"
                    HorizontalContentAlignment="Stretch"
                    Style="{StaticResource MaterialDesignNavigationListBox}"
                    materialDesign:RippleAssist.IsDisabled="True"
                    Grid.Row="2"
                    ScrollViewer.CanContentScroll="True"
                    Grid.Column="0"
                    ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                    ScrollViewer.VerticalScrollBarVisibility="Visible"
                    Grid.ColumnSpan="2"
                    ItemsSource="{Binding FolderItems}"
                    SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Background="Transparent"
                    BorderThickness="0"
                    Focusable="False"
                    Margin="0 15 0 0">

                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid
                                    Grid.Column="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>

                                    <Grid
                                        Height="150"
                                        HorizontalAlignment="Stretch"
                                        x:Name="gridItemShowGrid"
                                        Grid.Column="0" Grid.Row="0"
                                        Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverterInverse}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="11*"/>
                                            <ColumnDefinition Width="18*"/>
                                            <ColumnDefinition Width="8*"/>
                                            <ColumnDefinition Width="16*"/>
                                            <ColumnDefinition Width="8*"/>
                                            <ColumnDefinition Width="8*"/>
                                            <ColumnDefinition Width="8*"/>
                                            <ColumnDefinition Width="6*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Image
                                            Margin="10 0 0 0"
                                            Grid.Column="0"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Source="{Binding PhotoURL}"
                                            ToolTipService.InitialShowDelay="0"
                                            Width="200">
                                            <Image.ToolTip>
                                                <ToolTip 
                                                Placement="Right">
                                                    <Image
                                                    Source="{Binding PhotoURL}"
                                                    Width="350"/>
                                                </ToolTip>
                                            </Image.ToolTip>
                                        </Image>

                                        <StackPanel
                                            Margin="15 10 15 0"
                                            Grid.Column="1"
                                            HorizontalAlignment="Stretch"
                                            Orientation="Vertical">
                                            <TextBlock
                                                HorizontalAlignment="Center"
                                                Foreground="Gray"
                                                Text="Model Name"/>

                                            <TextBlock
                                                MaxWidth="230"
                                                TextWrapping="Wrap"
                                                Margin="0 30 0 0"
                                                Foreground="#217bca"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Bottom"
                                                Text="{Binding ModelName}"/>
                                        </StackPanel>

                                        <StackPanel
                                        Margin="15 10 15 0"
                                        Grid.Column="2"
                                        HorizontalAlignment="Center"
                                        Orientation="Vertical">
                                            <TextBlock
                                            HorizontalAlignment="Center"
                                            Foreground="Gray"
                                            Text="Prod. Year"/>

                                            <TextBlock 
                                            Margin="0 30 0 0"
                                            Foreground="#217bca"
                                            VerticalAlignment="Bottom"
                                            HorizontalAlignment="Center"
                                            Text="{Binding YearProduced}"/>
                                        </StackPanel>

                                        <StackPanel
                                        Margin="15 10 15 0"
                                        Grid.Column="3"
                                        HorizontalAlignment="Center"
                                        Orientation="Vertical">
                                            <TextBlock
                                            HorizontalAlignment="Center"
                                            Foreground="Gray"
                                            Text="Series"/>

                                            <TextBlock
                                                MaxWidth="200"
                                                Margin="0 30 0 0"
                                                Foreground="#217bca"
                                                TextWrapping="Wrap"
                                                VerticalAlignment="Bottom"
                                                HorizontalAlignment="Center"
                                                Text="{Binding SeriesName}"/>
                                        </StackPanel>

                                        <StackPanel
                                        Margin="15 10 15 0"
                                        Grid.Column="4"
                                        HorizontalAlignment="Center"
                                        Orientation="Vertical">
                                            <TextBlock
                                            HorizontalAlignment="Center"
                                            Foreground="Gray"
                                            Text="Series #"/>

                                            <TextBlock 
                                            Margin="0 30 0 0"
                                            VerticalAlignment="Bottom"
                                                Foreground="#217bca"
                                            HorizontalAlignment="Center"
                                            Text="{Binding SeriesNum}"/>
                                        </StackPanel>

                                        <StackPanel
                                        Margin="15 10 15 0"
                                        Grid.Column="5"
                                        HorizontalAlignment="Center"
                                        Orientation="Vertical">
                                            <TextBlock
                                            HorizontalAlignment="Center"
                                            Foreground="Gray"
                                            Text="Toy Code"/>

                                            <TextBlock 
                                            Margin="0 30 0 0"
                                            VerticalAlignment="Bottom"
                                                Foreground="#217bca"
                                            HorizontalAlignment="Center"
                                            Text="{Binding ToyNum}"/>
                                        </StackPanel>

                                        <StackPanel
                                        Margin="15 10 15 0"
                                        Grid.Column="6"
                                        HorizontalAlignment="Center"
                                        Orientation="Vertical">
                                            <TextBlock
                                            HorizontalAlignment="Center"
                                            Foreground="Gray"
                                            Text="Year #"/>

                                            <TextBlock
                                            Margin="0 30 0 0"
                                            VerticalAlignment="Bottom"
                                                Foreground="#217bca"
                                            HorizontalAlignment="Center"
                                            Text="{Binding YearProducedNum}"/>
                                        </StackPanel>

                                        <Button 
                                            Grid.Column="7"                                        
                                            Style="{StaticResource BorderlessButton}"
                                            Command="{Binding DataContext.EditModeItemCommand,
                                                        RelativeSource={RelativeSource FindAncestor,
                                                        AncestorType={x:Type views:IMvxWpfView}}}"
                                            CommandParameter="{Binding .}"                                
                                            Margin="0 0 10 0" Height="40"
                                            Grid.Row="0" HorizontalAlignment="Right">
                                            <Button.Visibility>
                                                <MultiBinding Converter="{StaticResource MultiBooleanVisibilityConverter}">
                                                    <Binding Path="IsEditing"/>
                                                    <Binding Path="IsCustom"/>
                                                </MultiBinding>
                                            </Button.Visibility>
                                            <TextBlock FontWeight="Bold" Padding="15 0" Text="Edit" Foreground="#a1a1a1"/>
                                        </Button>

                                        <Grid
                                            Grid.Column="7"
                                            Margin="0 5 0 0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <Button
                                                Command="{Binding DataContext.RemoveOneQuantityCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                                                CommandParameter="{Binding .}"
                                                Background="Transparent"
                                                BorderThickness="0"
                                                Grid.Column="0"
                                                HorizontalAlignment="Left"
                                                MaxWidth="25"
                                                MaxHeight="25">
                                                <materialDesign:PackIcon
                                                    Kind="Minus"
                                                    HorizontalAlignment="Center"
                                                    MaxHeight="20"
                                                    MaxWidth="20"/>
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Quantity}" Value="1">
                                                                <Setter Property="IsEnabled" Value="False"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>

                                            <TextBlock
                                                HorizontalAlignment="Center"
                                                Grid.Column="1"
                                                Foreground="#888"
                                                Margin="10 0 10 0"
                                                VerticalAlignment="Center"
                                                Text="{Binding Quantity}">
                                            </TextBlock>

                                            <Button
                                                Style="{StaticResource MaterialDesignIconButton}"
                                                Command="{Binding DataContext.AddHotWheelsCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                                                CommandParameter="{Binding .}"
                                                HorizontalAlignment="Right"
                                                Background="Transparent"
                                                BorderThickness="0"
                                                Grid.Column="2"
                                                MaxWidth="25"
                                                MaxHeight="25">
                                                <materialDesign:PackIcon
                                                    Kind="Plus"
                                                    MaxWidth="20"
                                                    MaxHeight="20"/>
                                            </Button>
                                        </Grid>


                                        <Button
                                            Grid.Column="8"
                                            Command="{Binding DataContext.OpenPopupCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                                            CommandParameter="{Binding .}"
                                            x:Name="menuOptionsButton"
                                            Focusable="True"
                                            Margin="0 10 10 0"
                                            Padding="15 0"
                                            FontFamily="pack://application:,,,/Assets/Fonts/#Font Awesome 6 Free Solid"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center">
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource BorderlessButton}">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="Transparent"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>

                                            <TextBlock
                                                Margin="0 -5 0 0"
                                                x:Name="textBlockMenu">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Setters>
                                                            <Setter Property="Foreground" Value="#a1a1a1"/>
                                                        </Style.Setters>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Foreground" Value="#fff"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                                
                                                <materialDesign:PackIcon
                                                    HorizontalAlignment="Center"
                                                    Kind="DotsHorizontal"
                                                    Width="32"
                                                    Height="32"/>
                                            </TextBlock>
                                        </Button>
                                    </Grid>

                                    <StackPanel
                                        x:Name="stackPanelItemEdit">
                                        <StackPanel 
                                            Orientation="Horizontal"
                                            Grid.Row="0"
                                            Grid.Column="0">
                                            <TextBox
                                            MinWidth="100"
                                            MaxWidth="200"
                                            Text="{Binding DataContext.EditingItemName, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverter}}"
                                            IsVisibleChanged="EditFolderNameTextBox_IsVisibleChanged">
                                                <TextBox.InputBindings>
                                                    <KeyBinding 
                                                    Key="Esc"
                                                    Command="{Binding DataContext.CancelItemEditCommand, RelativeSource={RelativeSource AncestorType=views:MvxWpfView}}"
                                                    CommandParameter="{Binding .}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction
                                                        Command="{Binding DataContext.LoseItemFocusCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                            <TextBox
                                            MinWidth="100"
                                            MaxWidth="200"
                                            Margin="10 0 0 0"
                                            Text="{Binding DataContext.EditingItemReleaseDate, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverter}}"
                                            PreviewTextInput="TextBox_PreviewTextInput" MaxLength="4">
                                                <TextBox.InputBindings>
                                                    <KeyBinding  
                                                    Key="Esc"
                                                    Command="{Binding DataContext.CancelItemEditCommand, RelativeSource={RelativeSource AncestorType=views:MvxWpfView}}"
                                                    CommandParameter="{Binding .}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction
                                                        Command="{Binding DataContext.LoseItemFocusCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </StackPanel>

                                        <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal">
                                            <TextBox
                                                Margin="0 6 0 0"
                                                MinWidth="100"
                                                MaxWidth="200"
                                                Text="{Binding DataContext.EditingItemCollectionName, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverter}}">
                                                <TextBox.InputBindings>
                                                    <KeyBinding 
                                                    Key="Esc"
                                                    Command="{Binding DataContext.CancelItemEditCommand, RelativeSource={RelativeSource AncestorType=views:MvxWpfView}}"
                                                    CommandParameter="{Binding .}"/>
                                                </TextBox.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction
                                                         Command="{Binding DataContext.LoseItemFocusCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>

                                <materialDesign:PopupBox
                                    x:Name="popupBoxMenu"
                                    Margin="0 0 42 0"
                                    IsHitTestVisible="False"
                                    materialDesign:StaysOpen="True"
                                    materialDesign:IsPopupOpen="{Binding IsPopupOpened, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    HorizontalAlignment="Right"
                                    materialDesign:PopupUniformCornerRadius="6"
                                    materialDesign:PlacementMode="LeftAndAlignMiddles">
                                    <materialDesign:PopupBox.ToggleContent>
                                        <materialDesign:PackIcon
                                            Width="0"
                                            Kind="None"/>
                                    </materialDesign:PopupBox.ToggleContent>

                                    <ListBox
                                        x:Name="listBoxPopupMenu"
                                        BorderThickness="0"
                                        HorizontalContentAlignment="Stretch"
                                        Padding="0">
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignNavigationListBoxItem}">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Padding" Value="0"/>
                                                <Setter Property="Margin" Value="4 0 4 2"/>
                                            </Style>
                                        </ListBox.ItemContainerStyle>

                                        <Grid>
                                            <TextBlock
                                                Margin="15 0 0 0"
                                                Panel.ZIndex="22"
                                                FontSize="18"
                                                Foreground="#555"
                                                IsHitTestVisible="False"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Left"
                                                Text="Add To Folder"/>

                                            <ComboBox
                                                DropDownClosed="comboBoxChooseFolder_DropDownClosed"
                                                Panel.ZIndex="0"
                                                x:Name="comboBoxChooseFolder"
                                                IsReadOnly="True"
                                                HorizontalContentAlignment="Left"
                                                IsEditable="False"
                                                Padding="0 6 12 6"
                                                BorderThickness="0"
                                                Foreground="Black"
                                                ItemsSource="{Binding DataContext.Folders, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}">
                                                <ComboBox.ItemContainerStyle>
                                                    <Style TargetType="ComboBoxItem" BasedOn="{StaticResource MaterialDesignComboBoxItemStyle}">
                                                        <Setter Property="Padding" Value="0"/>
                                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                                                <Setter Property="IsEnabled" Value="False"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ComboBox.ItemContainerStyle>

                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Button
                                                                x:Name="addToFolderBtn"
                                                                Command="{Binding DataContext.ToggleItemInFolder, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                                                                HorizontalAlignment="Stretch"
                                                                BorderThickness="0">
                                                                <Button.CommandParameter>
                                                                    <MultiBinding Converter="{StaticResource MultiBindingConverter}">
                                                                        <Binding Path="."/>
                                                                        <Binding Path="DataContext.SelectedItem" RelativeSource="{RelativeSource AncestorType={x:Type views:IMvxWpfView}}"/>
                                                                        <Binding Path="DataContext.SelectedFolder" RelativeSource="{RelativeSource AncestorType={x:Type views:IMvxWpfView}}"/>
                                                                    </MultiBinding>
                                                                </Button.CommandParameter>

                                                                <Button.Resources>
                                                                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatLightButton}">
                                                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                                                                <Setter Property="IsEnabled" Value="False"/>
                                                                                <Setter Property="Foreground" Value="#555"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Button.Resources>
                                                                <TextBlock
                                                                    Foreground="#555"
                                                                    Grid.Column="0"
                                                                    Text="{Binding Name}"
                                                                    TextTrimming="CharacterEllipsis"
                                                                    FontSize="18">
                                                                </TextBlock>
                                                            </Button>

                                                            <CheckBox
                                                                IsChecked="{Binding IsChecked}"
                                                                VerticalAlignment="Center"
                                                                HorizontalAlignment="Right"
                                                                Margin="0 2 10 0"
                                                                IsHitTestVisible="False">
                                                                <CheckBox.Style>
                                                                    <Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignCheckBox}">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </CheckBox.Style>
                                                            </CheckBox>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </Grid>

                                        <Button
                                            Background="Transparent"
                                            HorizontalAlignment="Stretch"
                                            VerticalContentAlignment="Center"
                                            Padding="10 0"
                                            Margin="-5 -5"
                                            Command="{Binding DataContext.DeleteItemFromFolderCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                                            CommandParameter="{Binding DataContext.SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}">
                                            <Button.Resources>
                                                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatLightButton}">
                                                    <Setter Property="Height" Value="45"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="#e6e6e6"/>
                                                        </Trigger>
                                                        <DataTrigger Binding="{Binding DataContext.SelectedFolder.IsDefault, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}" Value="True">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Resources>
                                            <StackPanel
                                                Orientation="Horizontal">
                                                <TextBlock
                                                    Foreground="#555"
                                                    Grid.Column="0"
                                                    Margin="10 0 0 0"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Text="Remove from folder" 
                                                    FontSize="18"/>
                                                <materialDesign:PackIcon
                                                    Foreground="#777"
                                                    Grid.Column="1"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Width="22"
                                                    Margin="42 0 0 0"
                                                    Height="22"
                                                    Kind="Remove"/>
                                            </StackPanel>         
                                        </Button>

                                        <Button
                                            Background="Transparent"
                                            HorizontalAlignment="Center"
                                            VerticalContentAlignment="Center"
                                            Padding="10 0"
                                            Margin="-5 -5"
                                            Height="45"
                                            Style="{StaticResource MaterialDesignFlatLightButton}"
                                            Command="{Binding DataContext.DeleteAllItemsCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                                            CommandParameter="{Binding DataContext.SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}">
                                            <TextBlock
                                                VerticalAlignment="Center"
                                                Foreground="#888"
                                                FontSize="18"
                                                TextTrimming="CharacterEllipsis">
                                                <StackPanel
                                                    Orientation="Horizontal">
                                                    <TextBlock
                                                        Foreground="#555"
                                                        Grid.Column="0"
                                                        Margin="10 0 0 0"
                                                        HorizontalAlignment="Right"
                                                        VerticalAlignment="Center"
                                                        Text="Remove from all folders" 
                                                        FontSize="18"/>
                                                    <materialDesign:PackIcon
                                                        Foreground="#777"
                                                        Grid.Column="1"
                                                        HorizontalAlignment="Right"
                                                        VerticalAlignment="Center"
                                                        Width="22"
                                                        Margin="9 0 0 0"
                                                        Height="22"
                                                        Kind="TrashCan"/>
                                                </StackPanel>
                                            </TextBlock>
                                        </Button>
                                    </ListBox>
                                </materialDesign:PopupBox>
                                
                                
                                <Button
                                    Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverter}}"
                                    Command="{Binding DataContext.SaveEditItemCommand, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}}"
                                    CommandParameter="{Binding .}"
                                    Margin="0 0 10 0"
                                    Focusable="False"
                                    Height="40"
                                    Grid.Column="2"
                                    Grid.Row="0"
                                    HorizontalAlignment="Right"
                                    IsEnabled="{Binding DataContext.CanSaveItemEdit, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource BorderlessButton}">
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="TextBlock.Opacity" Value="0.4"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <TextBlock
                                     FontWeight="Bold" Padding="15 0" Text="Save" Foreground="#388E3C"/>
                                </Button>
                                <Button
                                Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverter}}"
                                Command="{Binding DataContext.CancelItemEditCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                                CommandParameter="{Binding .}"
                                Style="{StaticResource BorderlessButton}"
                                Margin="0 0 10 0"
                                Height="40"
                                Grid.Column="1"                                
                                Grid.Row="0"
                                HorizontalAlignment="Right">
                                    <TextBlock
                                    FontWeight="Bold" Padding="15 0" Text="Cancel" Foreground="#a1a1a1"/>
                                </Button>

                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
            <TextBlock
            Margin="0 10"
            Foreground="#888"
            FontSize="18"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Grid.Row="2"
            Text="© Muntean Rares">
            </TextBlock>
        </Grid>
    </materialDesign:Card>
</views:MvxWpfView>
