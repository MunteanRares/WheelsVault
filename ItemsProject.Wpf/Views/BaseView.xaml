<views:MvxWpfView
        xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
        xmlns:mvx="clr-namespace:MvvmCross.Platforms.Wpf.Binding;assembly=MvvmCross.Platforms.Wpf"
        x:Class="ItemsProject.Wpf.Views.BaseView"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:conv="clr-namespace:ItemsProject.Wpf.Converters"
        xmlns:local="clr-namespace:ItemsProject.Wpf.Views" xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.AeroLite"
    mc:Ignorable="d" 
        FontSize="22"
        Background="#09203F"
        FontFamily="pack://application:,,,/WheelsVault;component/Assets/Fonts/#Fredoka Medium"        
        d:DesignHeight="1080" d:DesignWidth="1920" IsHitTestVisible="{Binding IsWindowEnabled}">

    <views:MvxWpfView.Resources>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.0"/>
            <GradientStop Color="Transparent" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.0"/>
            <GradientStop Color="Transparent" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#33414c"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.0"/>
            <GradientStop Color="Transparent" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#33414c"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.0"/>
            <GradientStop Color="Transparent" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#33414c"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border CornerRadius="0" x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="0" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" CornerRadius="0" BorderBrush="Transparent" BorderThickness="0" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate1" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup IsHitTestVisible="False"
                       StaysOpen="False"
                       x:Name="PART_Popup" AllowsTransparency="true"
                       Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                       Margin="0"
                       Placement="Custom"
                       CustomPopupPlacementCallback="CustomPopupPlacementCallback"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Border CornerRadius="4" Margin="0" x:Name="dropDownBorder" Background="#556D7E" BorderThickness="2" BorderBrush="#CCCCCCCC">
                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" Margin="0" x:Name="DropDownScrollViewer">
                            <Grid Margin="0" x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas Margin="0" x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle Margin="0" x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter Margin="0" x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <ToggleButton x:Name="toggleButton"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="0"
                              Grid.ColumnSpan="2"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                              Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter"
                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  IsHitTestVisible="False" Margin="0"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                </ContentPresenter>
                <TextBlock 
                    Foreground="#E0E9F2"
                    Padding="10 6"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    IsHitTestVisible="False">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock 
                            Grid.Column="0"                                    
                            Text="&#xf0d9;" 
                            Margin="2 0 0 0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="pack://application:,,,/Assets/Fonts/#Font Awesome 6 Free Solid" 
                            FontSize="16"/>
                        <TextBlock
                            Margin="12 0 0 0"
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            Text="Add To Folder"
                            FontSize="18"/>
                    </Grid>
                    
                </TextBlock>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <conv:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter"/>
        <conv:BooleanInverseConverter x:Key="BooleanInverseConverter"/>
        <conv:BooleanVisibilityConverterInverse x:Key="BooleanVisibilityConverterInverse"/>
        <conv:MultiBindingConverter x:Key="MultiBindingConverter"/>
    </views:MvxWpfView.Resources>

    <Grid
        x:Name="mainGrid"
        Focusable="True"
        >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.15*" MinWidth="260"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="0.15*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0"
               Grid.Column="0"
               HorizontalAlignment="Left"
               VerticalAlignment="Bottom"
               Margin="20 0 0 0"
               FontSize="38"
               Text="HotWheels Collection Manager">

            </TextBlock>
            <TextBlock Grid.Row="1"
               Grid.Column="0"
               Text="An App Made by Muntean Rares"
               VerticalAlignment="Top"
               FontSize="20"
               Margin="20 0 0 0"
               Opacity="0.6">

            </TextBlock>
        </Grid>


        <Border Grid.Column="1" Grid.Row="0" BorderThickness="0 0 0 2" BorderBrush="#A1A1A1" Opacity="0.8"></Border>

        <Grid Grid.Row="0" Grid.Column="0">
            <Grid.Background>
                <SolidColorBrush Color="#06162c" Opacity="0.7"/>
            </Grid.Background>
        </Grid>

        <Grid x:Name="actualGridWidth" Grid.Row="1" Grid.Column="0">
            <Grid.Background>
                <SolidColorBrush Color="#06162c" Opacity="0.7"/>
            </Grid.Background>

            <Grid.RowDefinitions>
                <RowDefinition Height="0.1*" MinHeight="90"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Button MinHeight="40" FontSize="20" Margin="0 30 0 0" mvx:Bi.nd="Command OpenAddFolderWindowCommand">
                <TextBlock Foreground="#09203F" Text="+ Add Folder">
                </TextBlock>
            </Button>

            <ListView Margin="0 20 0 0"
                      x:Name="folderListView"
                      BorderThickness="0"
                      ItemsSource="{Binding Folders}"
                      SelectedItem="{Binding SelectedFolder, Mode=TwoWay}"
                      AlternationCount="99"
                      Grid.Row="1"
                      Grid.Column="0"
                      Focusable="False"
                      Background="Transparent">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Name="OriginalFolderName"
                                       Width="155"
                                       Margin="2 1 0 0"
                                       TextTrimming="CharacterEllipsis"
                                       Grid.Column="0" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       ToolTip="{Binding Name}" ToolTipService.InitialShowDelay="100"
                                       Visibility="{Binding IsEditing,
                                                    Converter={StaticResource BooleanVisibilityConverterInverse}}"/>

                            <StackPanel Orientation="Horizontal" Width="155">
                                <TextBox x:Name="EditFolderNameTextBox" 
                                         Text="{Binding DataContext.EditingFolderName, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         Height="{Binding ElementName=OriginalFolderName, Path=ActualHeight}"
                                         Width="120"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Visibility="{Binding IsEditing,
                                                              Converter={StaticResource BooleanVisibilityConverter}}"
                                         IsVisibleChanged="EditFolderNameTextBox_IsVisibleChanged">
                                    <TextBox.InputBindings>
                                        <KeyBinding
                                            Key="Esc"
                                            Command="{Binding DataContext.CancelFolderEditCommand, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}}"
                                            CommandParameter="{Binding .}"/>
                                        <KeyBinding
                                            Key="Enter"
                                            Command="{Binding DataContext.SaveEditFolderCommand, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}}"
                                            CommandParameter="{Binding .}"/>
                                    </TextBox.InputBindings>

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="LostFocus">
                                            <i:InvokeCommandAction Command="{Binding DataContext.CancelFolderEditCommand,
                                                                             RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}}"
                                                                   CommandParameter="{Binding .}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>

                                <Button x:Name="SaveEditBtnIcon"
                                        Focusable="False"
                                        HorizontalAlignment="Right"
                                        Command="{Binding DataContext.SaveEditFolderCommand, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}}"
                                        CommandParameter="{Binding .}"
                                        Visibility="{Binding IsEditing,
                                                    Converter={StaticResource BooleanVisibilityConverter}}"
                                        IsEnabled="{Binding DataContext.CanSaveFolderEdit, RelativeSource={RelativeSource AncestorType=views:MvxWpfView}}"
                                        Margin="4 0 8 0">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Foreground" Value="#4CAF50"/>
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <Grid>
                                                            <Border Padding="{TemplateBinding Padding}" 
                                                                    Background="{TemplateBinding Background}" CornerRadius="6" BorderThickness="2 0 2 4">
                                                                <TextBlock Name="TextBlock" FontSize="20" Text="&#xf00c;" 
                                                                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                               FontFamily="pack://application:,,,/Assets/Fonts/#Font Awesome 6 Free Solid"
                                                                               Foreground="{TemplateBinding Foreground}" />
                                                            </Border>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Cursor" Value="Hand"/>
                                                                <Setter Property="Foreground" Value="#388E3C" />
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="TextBlock.Opacity" Value="0.4"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=(ItemsControl.AlternationIndex)}" Value="0">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>

                            <Button Name="EditFolderIconBtn"
                                    HorizontalAlignment="Right"
                                    Command="{Binding DataContext.EditModeFoldersCommand, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=DataContext}"
                                    IsEnabled="{Binding IsEditing,
                                                Converter={StaticResource BooleanInverseConverter}}"
                                    Grid.Column="1"
                                    Margin="0 0 8 0">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Foreground" Value="#A0A0A0"/>
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Grid>
                                                        <Border Padding="{TemplateBinding Padding}" 
                                                            Background="{TemplateBinding Background}" CornerRadius="6" BorderThickness="2 0 2 4">
                                                            <TextBlock Name="TextBlock" FontSize="18" Text="&#xf044;" 
                                                                       HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                       FontFamily="pack://application:,,,/Assets/Fonts/#Font Awesome 6 Free Solid"
                                                                       Foreground="{TemplateBinding Foreground}" />
                                                        </Border>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Cursor" Value="Hand"/>
                                                            <Setter Property="Foreground" Value="#0078D7" />
                                                        </Trigger>

                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground" Value="#0078D7" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=(ItemsControl.AlternationIndex)}" Value="0">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <Button Name="DeleteFolderIconBtn" Command="{Binding DataContext.OpenDeleteFolderConfirmationCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:IMvxWpfView}}}"
                                    CommandParameter="{Binding}"                                    
                                    BorderThickness="0"
                                    Grid.Column="2" HorizontalAlignment="Right">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Foreground" Value="#A0A0A0"/>
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Grid>
                                                        <Border Padding="{TemplateBinding Padding}" 
                                                                Background="{TemplateBinding Background}" CornerRadius="6" BorderThickness="2 0 2 4">
                                                            <TextBlock Name="TextBlock" FontSize="18" Text="&#xf1f8;" 
                                                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                                               FontFamily="pack://application:,,,/Assets/Fonts/#Font Awesome 6 Free Solid"
                                                               Foreground="{TemplateBinding Foreground}" />
                                                        </Border>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Cursor" Value="Hand"/>
                                                            <Setter Property="Foreground" Value="#d73b3e" />
                                                        </Trigger>

                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Foreground" Value="Transparent"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=(ItemsControl.AlternationIndex)}" Value="0">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>

        <Grid Margin="40 15 0 0" Grid.Row="2" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.1*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2.1*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Row="0" Grid.Column="0" Margin="15 0 0 0" Orientation="Horizontal">

                <Border Height="30">
                    <TextBlock Margin="0 5 0 0" Text="Search" VerticalAlignment="Center"/>
                </Border>

                <TextBox 
                    Name="searchTextBox"
                    Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    FontSize="20"
                    Padding="2"
                    Grid.Column="0"
                    MaxWidth="400"
                    Width="200"
                    Height="30"
                    Margin="10 0 0 0"/>

                <StackPanel 
                    Margin="25 0 0 0"
                    Orientation="Horizontal"
                    Grid.Row="1" 
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                    <TextBlock
                        Text="Sort By"
                        VerticalAlignment="Center">
                    </TextBlock>

                    <ComboBox 
                        x:Name="comboBoxSort"
                        Template="{DynamicResource RoundComboBox}"
                        IsEnabled="{Binding IsFolderSelected}"
                        ItemsSource="{Binding SortOptions}"
                        SelectedItem="{Binding SelectedSortOption}"
                        Margin="10 0 0 0"
                        Height="{Binding Path=ActualHeight, ElementName=searchTextBox}"
                        Width="150"
                        Focusable="True">
                        <ComboBox.Resources>
                            <Style TargetType="TextBlock" BasedOn="{x:Null}">
                                <Setter Property="Foreground" Value="#09203F"/>
                            </Style>
                        </ComboBox.Resources>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" Foreground="#09203F"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
            </StackPanel>

            <StackPanel 
                Grid.Column="2"
                Orientation="Horizontal"
                HorizontalAlignment="Right">
                <TextBox 
                    x:Name="hotwheelsAddTextBox"                    
                    FontSize="20"
                    Background="#fff"
                    Width="300"
                    Text="{Binding SearchhwText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Height="30"
                    TextAlignment="Left"
                    Foreground="Gray"
                    VerticalAlignment="Center"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"
                    HorizontalAlignment="Right"
                    LostFocus="hotwheelsAddTextBox_LostFocus"
                    GotFocus="hotwheelsAddTextBox_GotFocus"
                    Margin="0 0 40 0"
                    PreviewKeyDown="hotwheelsAddTextBox_PreviewKeyDown">
                </TextBox>

                <Popup
                    IsOpen="True"
                    StaysOpen="True"
                    Placement="Bottom"
                    PopupAnimation="Fade"
                    HorizontalOffset="-400"
                    PlacementTarget="{Binding ElementName=hotwheelsAddTextBox}"
                    Width="700">
                    <ListBox
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            ItemsSource="{Binding SearchhwResult}"
                            MaxHeight="400"
                            ScrollViewer.VerticalScrollBarVisibility="Visible">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Margin" Value="0 0 0 8"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid
                                    x:Name="mainItemGrid"
                                    Height="100"
                                    Width="700">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="100"/>
                                        <ColumnDefinition Width="200"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Image
                                        Grid.Column="0"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ToolTipService.InitialShowDelay="0"
                                        Source="{Binding PhotoURL}">
                                        <Image.ToolTip>
                                            <ToolTip
                                                Placement="Left">
                                                <Image Source="{Binding PhotoURL}" Width="350"/>
                                            </ToolTip>
                                        </Image.ToolTip>
                                    </Image>

                                    <TextBlock
                                        Margin="10 0 0 0"
                                        Foreground="#09203F"
                                        FontSize="18"
                                        VerticalAlignment="Center"
                                        TextWrapping="Wrap"
                                        Grid.Column="1"
                                        Text="{Binding ModelName}"
                                        HorizontalAlignment="left">
                                    </TextBlock>

                                    <Grid
                                        Height="{Binding Path=ActualHeight, ElementName=mainItemGrid}"
                                        Grid.Column="2">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <TextBlock
                                            Grid.Row="0"
                                            FontSize="16"
                                            Text="Prod. Year"
                                            Foreground="#9009203F"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Top">
                                        </TextBlock>
                                        
                                        <TextBlock
                                            Grid.Row="1"
                                            Margin="0 0 0 10"
                                            Foreground="#09203F"
                                            FontSize="18"
                                            VerticalAlignment="Center"
                                            TextWrapping="Wrap"
                                            Text="{Binding YearProduced}"
                                            HorizontalAlignment="Center">
                                        </TextBlock>
                                    </Grid>
                                    
                                    <Border
                                        Grid.ColumnSpan="3"
                                        Grid.Column="0"
                                        Margin="0 3 0 0"
                                        BorderThickness="0 0 0 2"
                                        BorderBrush="#09203F">
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Popup>

                <Button 
                    FontSize="20"
    
                    IsEnabled="{Binding IsFolderSelected}"
                    Width="160"
                    HorizontalAlignment="Right"
                    Margin="0 0 25 0"
                    mvx:Bi.nd="Command OpenAddItemWindowCommand">
                    <TextBlock Foreground="#09203F" Text="+ Custom Item">
                    </TextBlock>
                </Button>
            </StackPanel>

            

            <ListView Grid.Row="2"
                      Grid.Column="0"
                      Grid.ColumnSpan="2"
                      ItemsSource="{Binding FolderItems}"
                      SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Background="Transparent"
                      BorderThickness="0"
                      Focusable="False"
                      Margin="0 10 40 0">

                <ListView.Resources>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Style.Setters>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Margin" Value="0 5 0 0"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Grid Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <ContentPresenter Margin="15 15 15 15"/>
                                            <Border BorderThickness="0 0 0 2" BorderBrush="#A1A1A1" Opacity="0.8" CornerRadius="0"></Border>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style.Setters>
                    </Style>
                </ListView.Resources>

                <ListView.ItemTemplate>
                    <DataTemplate>
                        <DockPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>

                                <StackPanel
                                    HorizontalAlignment="Left"
                                    Grid.Column="0" Grid.Row="0"
                                    Orientation="Horizontal"
                                    Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverterInverse}}">
                                    <TextBlock 
                                        Margin="0 0 10 0"  
                                        Text="{Binding ModelName}"/>
                                    <TextBlock Text="{Binding ModelReleaseDate}"/>
                                </StackPanel>

                                <StackPanel
                                    x:Name="stackPanelItemEdit">
                                    <StackPanel 
                                        Orientation="Horizontal"
                                        Grid.Row="0"
                                        Grid.Column="0">
                                        <TextBox
                                            MinWidth="100"
                                            MaxWidth="200"
                                            Text="{Binding DataContext.EditingItemName, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverter}}"
                                            IsVisibleChanged="EditFolderNameTextBox_IsVisibleChanged">
                                            <TextBox.InputBindings>
                                                <KeyBinding 
                                                    Key="Esc"
                                                    Command="{Binding DataContext.CancelItemEditCommand, RelativeSource={RelativeSource AncestorType=views:MvxWpfView}}"
                                                    CommandParameter="{Binding .}"/>
                                            </TextBox.InputBindings>
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="LostFocus">
                                                    <i:InvokeCommandAction
                                                        Command="{Binding DataContext.LoseItemFocusCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>
                                        <TextBox
                                            MinWidth="100"
                                            MaxWidth="200"
                                            Margin="10 0 0 0"
                                            Text="{Binding DataContext.EditingItemReleaseDate, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverter}}"
                                            PreviewTextInput="TextBox_PreviewTextInput" MaxLength="4">
                                            <TextBox.InputBindings>
                                                <KeyBinding  
                                                    Key="Esc"
                                                    Command="{Binding DataContext.CancelItemEditCommand, RelativeSource={RelativeSource AncestorType=views:MvxWpfView}}"
                                                    CommandParameter="{Binding .}"/>
                                            </TextBox.InputBindings>
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="LostFocus">
                                                    <i:InvokeCommandAction
                                                        Command="{Binding DataContext.LoseItemFocusCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>
                                    </StackPanel>

                                    <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal">
                                        <TextBlock Margin="0 6 10 0" Text="Series:"/>
                                        <TextBlock
                                            Margin="0 6 0 0"
                                            Text="{Binding CollectionName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverterInverse}}"/>
                                        <TextBox
                                                Margin="0 6 0 0"
                                                MinWidth="100"
                                                MaxWidth="200"
                                                Text="{Binding DataContext.EditingItemCollectionName, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverter}}">
                                            <TextBox.InputBindings>
                                                <KeyBinding 
                                                    Key="Esc"
                                                    Command="{Binding DataContext.CancelItemEditCommand, RelativeSource={RelativeSource AncestorType=views:MvxWpfView}}"
                                                    CommandParameter="{Binding .}"/>
                                            </TextBox.InputBindings>
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="LostFocus">
                                                    <i:InvokeCommandAction
                                                         Command="{Binding DataContext.LoseItemFocusCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>

                            <Popup 
                                x:Name="addFolderMenuOption"
                                IsOpen="{Binding IsPopupOpened, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                PlacementTarget="{Binding ElementName=menuOptionsButton}"
                                Placement="Left"
                                StaysOpen="False">
                                <ListBox
                                    Background="#556D7E"
                                    x:Name="listBoxPopupMenu"
                                    BorderThickness="2"
                                    Padding="0">
                                    <ListBox.Resources>
                                        <Style TargetType="{x:Type ListBox}">
                                            <Style.Setters>
                                                <Setter Property="BorderBrush">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="#CCCCCCCC"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style.Setters>
                                        </Style>

                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Style.Setters>
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="Margin" Value="0 0 0 0"/>
                                                <Setter Property="FontSize" Value="18"/>
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Grid Background="{TemplateBinding Background}"  VerticalAlignment="Stretch">
                                                                <ContentPresenter Margin="0"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style.Setters>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="#445765"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                        <Style TargetType="Border">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </ListBox.Resources>

                                    <ComboBox
                                        x:Name="comboBoxChooseFolder"
                                        IsReadOnly="True"
                                        IsEditable="True"
                                        Template="{DynamicResource ComboBoxTemplate1}"
                                        ItemsSource="{Binding DataContext.Folders, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                                        Text="Add To Folder">
                                        <ComboBox.Resources>
                                            <Style TargetType="{x:Type ComboBoxItem}">
                                                <Setter Property="Margin" Value="0"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Padding" Value="0"/>
                                            </Style>
                                        </ComboBox.Resources>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Button
                                                        x:Name="addToFolderBtn"
                                                        Command="{Binding DataContext.ToggleItemInFolder, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                                                        Background="#556D7E"
                                                        HorizontalContentAlignment="Left"
                                                        Width="{Binding Path=ActualWidth, ElementName=toggleButton}"
                                                        BorderThickness="0">
                                                        <Button.CommandParameter>
                                                            <MultiBinding Converter="{StaticResource MultiBindingConverter}">
                                                                <Binding Path="."/>
                                                                <Binding Path="DataContext.SelectedItem" RelativeSource="{RelativeSource AncestorType={x:Type views:IMvxWpfView}}"/>
                                                                <Binding Path="DataContext.SelectedFolder" RelativeSource="{RelativeSource AncestorType={x:Type views:IMvxWpfView}}"/>
                                                            </MultiBinding>
                                                        </Button.CommandParameter>
                                                        
                                                        <Button.Resources>
                                                            <Style TargetType="Button">
                                                                <Style.Setters>
                                                                    <Setter Property="BorderBrush">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush Color="#cccccc" Opacity="0.8"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="Button">
                                                                                <Border
                                                                                    x:Name="border"
                                                                                    Background="{TemplateBinding Background}"
                                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    Padding="{TemplateBinding Padding}"
                                                                                    CornerRadius="0">
                                                                                    <ContentPresenter
                                                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                        RecognizesAccessKey="True"/>
                                                                                </Border>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter TargetName="border" Property="Background" Value="#445765"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style.Setters>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                                                        <Setter Property="IsHitTestVisible" Value="False"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Resources>
                                                        <TextBlock
                                                            Grid.Column="0"
                                                            Text="{Binding Name}"
                                                            TextTrimming="CharacterEllipsis"
                                                            MaxWidth="125"
                                                            FontSize="18">
                                                            <TextBlock.Style>
                                                                <Style TargetType="TextBlock">
                                                                    <Style.Setters>
                                                                        <Setter Property="Margin" Value="10 4"/>
                                                                        <Setter Property="Foreground" Value="#E0E9F2"/>
                                                                    </Style.Setters>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </Button>

                                                    <CheckBox
                                                        IsChecked="{Binding IsChecked}"
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Right"
                                                        Margin="0 2 10 0"
                                                        IsHitTestVisible="False">
                                                        <CheckBox.Style>
                                                            <Style TargetType="CheckBox">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </CheckBox.Style>
                                                    </CheckBox>
                                                </Grid>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <Button
                                        Background="#556D7E"
                                        HorizontalAlignment="Left"
                                        Command="{Binding DataContext.DeleteItemFromFolderCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                                        CommandParameter="{Binding DataContext.SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}">
                                        <Button.Resources>
                                            <Style TargetType="Button" BasedOn="{x:Null}">
                                                <Style.Setters>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="Button">
                                                                <Border
                                                                    x:Name="border"
                                                                    Background="Transparent"
                                                                    BorderBrush="Transparent"
                                                                    BorderThickness="0"
                                                                    Padding="0">
                                                                    <ContentPresenter
                                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                        RecognizesAccessKey="True"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter TargetName="border" Property="Background" Value="#445765"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style.Setters>
                                            </Style>
                                        </Button.Resources>
                                        <TextBlock
                                            TextTrimming="CharacterEllipsis">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock 
                                                    Grid.Column="0" 
                                                    Text="&#xf00d;" 
                                                    FontFamily="pack://application:,,,/Assets/Fonts/#Font Awesome 6 Free Solid" 
                                                    FontSize="16"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"/>
                                                <TextBlock
                                                    Grid.Column="1"
                                                    Margin="10 0 0 0"
                                                    VerticalAlignment="Center"
                                                    Text="Remove from Folder" 
                                                    FontSize="18"/>
                                            </Grid>
                                            
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Setters>
                                                        <Setter Property="Margin" Value="10 4"/>
                                                        <Setter Property="Foreground" Value="#E0E9F2"/>
                                                    </Style.Setters>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding DataContext.IsFirstFolderSelected, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}" Value="True">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Button>

                                    <Button
                                        Background="#556D7E"
                                        HorizontalAlignment="Left"
                                        Command="{Binding DataContext.DeleteAllItemsCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                                        CommandParameter="{Binding DataContext.SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}">
                                        <Button.Resources>
                                            <Style TargetType="Button" BasedOn="{x:Null}">
                                                <Style.Setters>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="Button">
                                                                <Border
                                                                    x:Name="border"
                                                                    Background="Transparent"
                                                                    BorderBrush="Transparent"
                                                                    BorderThickness="0"
                                                                    Padding="0">
                                                                     <ContentPresenter
                                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                        RecognizesAccessKey="True"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter TargetName="border" Property="Background" Value="#445765"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style.Setters>
                                            </Style>
                                        </Button.Resources>
                                        <TextBlock
                                            TextTrimming="CharacterEllipsis">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock 
                                                    Grid.Column="0" 
                                                    Text="&#xf1f8;" 
                                                    FontFamily="pack://application:,,,/Assets/Fonts/#Font Awesome 6 Free Solid" 
                                                    FontSize="14"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"/>
                                                <TextBlock
                                                    Grid.Column="1"
                                                    Margin="10 0 0 0"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Text="Remove from all Folders" 
                                                    FontSize="18"/>
                                            </Grid>
        
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock" BasedOn="{x:Null}">
                                                    <Style.Setters>
                                                        <Setter Property="Margin" Value="10 4"/>
                                                    </Style.Setters>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Button>


                                </ListBox>
                            </Popup>

                            <Button
                                Command="{Binding DataContext.OpenPopupCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                                CommandParameter="{Binding .}"
                                x:Name="menuOptionsButton"
                                Focusable="True"   
                                DockPanel.Dock="Right"
                                Margin="0 0 10 0"
                                Padding="15 0"
                                FontFamily="pack://application:,,,/Assets/Fonts/#Font Awesome 6 Free Solid"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource BorderlessButton}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="Transparent"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <TextBlock 
                                    x:Name="textBlockMenu"
                                    Text="&#xf141;">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Setters>
                                                <Setter Property="Foreground" Value="#a1a1a1"/>
                                            </Style.Setters>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="#fff"/>
                                                    <Setter Property="RenderTransform">
                                                        <Setter.Value>
                                                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Button>



                            <Button 
                                Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverterInverse}}"
                                Style="{StaticResource BorderlessButton}"
                                Command="{Binding DataContext.EditModeItemCommand,
                                            RelativeSource={RelativeSource FindAncestor,
                                            AncestorType={x:Type views:IMvxWpfView}}}"
                                CommandParameter="{Binding .}"                                
                                Margin="0 0 10 0" Height="40"
                                DockPanel.Dock="Right"
                                Grid.Row="0" HorizontalAlignment="Right">
                                <TextBlock FontWeight="Bold" Padding="15 0" Text="Edit" Foreground="#a1a1a1"/>
                            </Button>

                            <Button
                                Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverter}}"
                                Command="{Binding DataContext.SaveEditItemCommand, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}}"
                                CommandParameter="{Binding .}"
                                Margin="0 0 10 0"
                                Focusable="False"
                                Height="40"
                                Grid.Column="2"
                                Grid.Row="0"
                                DockPanel.Dock="Right"
                                HorizontalAlignment="Right"
                                IsEnabled="{Binding DataContext.CanSaveItemEdit, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource BorderlessButton}">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="TextBlock.Opacity" Value="0.4"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <TextBlock
                                     FontWeight="Bold" Padding="15 0" Text="Save" Foreground="#388E3C"/>
                            </Button>
                            <Button
                                Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverter}}"
                                Command="{Binding DataContext.CancelItemEditCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                                CommandParameter="{Binding .}"
                                Style="{StaticResource BorderlessButton}"
                                Margin="0 0 10 0"
                                Height="40"
                                Grid.Column="1"                                
                                Grid.Row="0"
                                HorizontalAlignment="Right">
                                <TextBlock
                                    FontWeight="Bold" Padding="15 0" Text="Cancel" Foreground="#a1a1a1"/>
                            </Button>

                        </DockPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>

    </Grid>
</views:MvxWpfView>
