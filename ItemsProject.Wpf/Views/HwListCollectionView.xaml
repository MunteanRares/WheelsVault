<views:MvxWpfView
    x:Class="ItemsProject.Wpf.Views.HwListCollectionView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
    xmlns:local="clr-namespace:ItemsProject.Wpf.Views"
    mc:Ignorable="d"       
    xmlns:conv="clr-namespace:ItemsProject.Wpf.Converters"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    d:DesignHeight="450" d:DesignWidth="800">
    
    <views:MvxWpfView.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <materialDesign:CustomColorTheme BaseTheme="Light" PrimaryColor="#2196F3" SecondaryColor="#1976D2"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesign3.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <conv:MultiBindingConverter x:Key="MultiBindingConverter"/>
            <conv:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter"/>
            <conv:MultiBooleanVisibilityConverter x:Key="MultiBooleanVisibilityConverter"/>
            <conv:BooleanVisibilityConverterInverse x:Key="BooleanVisibilityConverterInverse"/>
        </ResourceDictionary>
    </views:MvxWpfView.Resources>

    <views:MvxWpfView.Style>
        <Style TargetType="views:MvxWpfView">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation 
                                Storyboard.TargetProperty="Opacity"
                                From="0"
                                To="1"
                                Duration="0:0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </views:MvxWpfView.Style>
    
    <Grid>
        <ListBox
            VirtualizingPanel.IsVirtualizing="True"
            VirtualizingPanel.VirtualizationMode="Recycling"
            x:Name="carCollectionList"
            HorizontalContentAlignment="Stretch"
            materialDesign:RippleAssist.IsDisabled="True"
            Grid.Row="2"
            ScrollViewer.CanContentScroll="true"
            Grid.Column="0"
            ScrollViewer.HorizontalScrollBarVisibility="Hidden"
            ScrollViewer.VerticalScrollBarVisibility="Visible"
            Grid.ColumnSpan="2"
            ItemsSource="{Binding FolderItems}"
            SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Background="Transparent"
            BorderThickness="0"
            Focusable="False"
            Margin="0 15 0 0">
            <ListBox.Style>
                <Style TargetType="ListBox" BasedOn="{StaticResource MaterialDesignNavigationListBox}">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <TranslateTransform Y="-200"/>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <EventTrigger
                            RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                        From="-200"
                                        To="0"
                                        Duration="0:0:0:0.7">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Style>
            
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid
                            Grid.Column="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <Grid
                                Height="150"
                                HorizontalAlignment="Stretch"
                                x:Name="gridItemShowGrid"
                                Grid.Column="0" Grid.Row="0"
                                Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverterInverse}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="11*"/>
                                    <ColumnDefinition Width="18*"/>
                                    <ColumnDefinition Width="8*"/>
                                    <ColumnDefinition Width="16*"/>
                                    <ColumnDefinition Width="8*"/>
                                    <ColumnDefinition Width="8*"/>
                                    <ColumnDefinition Width="8*"/>
                                    <ColumnDefinition Width="6*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Image
                            Margin="10 0 0 0"
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Source="{Binding PhotoURL}"
                            ToolTipService.InitialShowDelay="0"
                            Width="200">
                                    <Image.ToolTip>
                                        <ToolTip 
                                Placement="Right">
                                            <Image
                                    Source="{Binding PhotoURL}"
                                    Width="350"/>
                                        </ToolTip>
                                    </Image.ToolTip>
                                </Image>

                                <StackPanel
                            Margin="15 10 15 0"
                            Grid.Column="1"
                            HorizontalAlignment="Stretch"
                            Orientation="Vertical">
                                    <TextBlock
                                HorizontalAlignment="Center"
                                Foreground="Gray"
                                Text="Model Name"/>

                                    <TextBlock
                                MaxWidth="230"
                                TextWrapping="Wrap"
                                Margin="0 30 0 0"
                                Foreground="#217bca"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Bottom"
                                Text="{Binding ModelName}"/>
                                </StackPanel>

                                <StackPanel
                        Margin="15 10 15 0"
                        Grid.Column="2"
                        HorizontalAlignment="Center"
                        Orientation="Vertical">
                                    <TextBlock
                            HorizontalAlignment="Center"
                            Foreground="Gray"
                            Text="Prod. Year"/>

                                    <TextBlock 
                            Margin="0 30 0 0"
                            Foreground="#217bca"
                            VerticalAlignment="Bottom"
                            HorizontalAlignment="Center"
                            Text="{Binding YearProduced}"/>
                                </StackPanel>

                                <StackPanel
                        Margin="15 10 15 0"
                        Grid.Column="3"
                        HorizontalAlignment="Center"
                        Orientation="Vertical">
                                    <TextBlock
                            HorizontalAlignment="Center"
                            Foreground="Gray"
                            Text="Series"/>

                                    <TextBlock
                                MaxWidth="200"
                                Margin="0 30 0 0"
                                Foreground="#217bca"
                                TextWrapping="Wrap"
                                VerticalAlignment="Bottom"
                                HorizontalAlignment="Center"
                                Text="{Binding SeriesName}"/>
                                </StackPanel>

                                <StackPanel
                        Margin="15 10 15 0"
                        Grid.Column="4"
                        HorizontalAlignment="Center"
                        Orientation="Vertical">
                                    <TextBlock
                            HorizontalAlignment="Center"
                            Foreground="Gray"
                            Text="Series #"/>

                                    <TextBlock 
                            Margin="0 30 0 0"
                            VerticalAlignment="Bottom"
                                Foreground="#217bca"
                            HorizontalAlignment="Center"
                            Text="{Binding SeriesNum}"/>
                                </StackPanel>

                                <StackPanel
                        Margin="15 10 15 0"
                        Grid.Column="5"
                        HorizontalAlignment="Center"
                        Orientation="Vertical">
                                    <TextBlock
                            HorizontalAlignment="Center"
                            Foreground="Gray"
                            Text="Toy Code"/>

                                    <TextBlock 
                            Margin="0 30 0 0"
                            VerticalAlignment="Bottom"
                                Foreground="#217bca"
                            HorizontalAlignment="Center"
                            Text="{Binding ToyNum}"/>
                                </StackPanel>

                                <StackPanel
                        Margin="15 10 15 0"
                        Grid.Column="6"
                        HorizontalAlignment="Center"
                        Orientation="Vertical">
                                    <TextBlock
                            HorizontalAlignment="Center"
                            Foreground="Gray"
                            Text="Year #"/>

                                    <TextBlock
                            Margin="0 30 0 0"
                            VerticalAlignment="Bottom"
                                Foreground="#217bca"
                            HorizontalAlignment="Center"
                            Text="{Binding YearProducedNum}"/>
                                </StackPanel>

                                <Button 
                            Grid.Column="7"                                        
                            Style="{StaticResource BorderlessButton}"
                            Command="{Binding DataContext.EditModeItemCommand,
                                        RelativeSource={RelativeSource FindAncestor,
                                        AncestorType={x:Type views:IMvxWpfView}}}"
                            CommandParameter="{Binding .}"                                
                            Margin="0 0 10 0" Height="40"
                            Grid.Row="0" HorizontalAlignment="Right">
                                    <Button.Visibility>
                                        <MultiBinding Converter="{StaticResource MultiBooleanVisibilityConverter}">
                                            <Binding Path="IsEditing"/>
                                            <Binding Path="IsCustom"/>
                                        </MultiBinding>
                                    </Button.Visibility>
                                    <TextBlock FontWeight="Bold" Padding="15 0" Text="Edit" Foreground="#a1a1a1"/>
                                </Button>

                                <Grid
                            Grid.Column="7"
                            Margin="0 5 0 0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Button
                                Command="{Binding DataContext.RemoveOneQuantityCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                                CommandParameter="{Binding .}"
                                Background="Transparent"
                                BorderThickness="0"
                                Grid.Column="0"
                                HorizontalAlignment="Left"
                                MaxWidth="25"
                                MaxHeight="25">
                                        <materialDesign:PackIcon
                                    Kind="Minus"
                                    HorizontalAlignment="Center"
                                    MaxHeight="20"
                                    MaxWidth="20"/>
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Quantity}" Value="1">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <TextBlock
                                HorizontalAlignment="Center"
                                Grid.Column="1"
                                Foreground="#888"
                                Margin="10 0 10 0"
                                VerticalAlignment="Center"
                                Text="{Binding Quantity}">
                                    </TextBlock>

                                    <Button
                                Style="{StaticResource MaterialDesignIconButton}"
                                Command="{Binding DataContext.AddHotWheelsCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                                CommandParameter="{Binding .}"
                                HorizontalAlignment="Right"
                                Background="Transparent"
                                BorderThickness="0"
                                Grid.Column="2"
                                MaxWidth="25"
                                MaxHeight="25">
                                        <materialDesign:PackIcon
                                    Kind="Plus"
                                    MaxWidth="20"
                                    MaxHeight="20"/>
                                    </Button>
                                </Grid>


                                <Button
                            Grid.Column="8"
                            Command="{Binding DataContext.OpenPopupCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                            CommandParameter="{Binding .}"
                            x:Name="menuOptionsButton"
                            Focusable="True"
                            Margin="0 10 10 0"
                            Padding="15 0"
                            FontFamily="pack://application:,,,/Assets/Fonts/#Font Awesome 6 Free Solid"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource BorderlessButton}">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>

                                    <TextBlock
                                Margin="0 -5 0 0"
                                x:Name="textBlockMenu">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Setters>
                                                    <Setter Property="Foreground" Value="#a1a1a1"/>
                                                </Style.Setters>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Foreground" Value="#fff"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                
                                <materialDesign:PackIcon
                                    HorizontalAlignment="Center"
                                    Kind="DotsHorizontal"
                                    Width="32"
                                    Height="32"/>
                                    </TextBlock>
                                </Button>
                            </Grid>

                            <StackPanel
                        x:Name="stackPanelItemEdit">
                                <StackPanel 
                            Orientation="Horizontal"
                            Grid.Row="0"
                            Grid.Column="0">
                                    <TextBox
                            MinWidth="100"
                            MaxWidth="200"
                            Text="{Binding DataContext.EditingItemName, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverter}}"
                            IsVisibleChanged="EditFolderNameTextBox_IsVisibleChanged">
                                        <TextBox.InputBindings>
                                            <KeyBinding 
                                    Key="Esc"
                                    Command="{Binding DataContext.CancelItemEditCommand, RelativeSource={RelativeSource AncestorType=views:MvxWpfView}}"
                                    CommandParameter="{Binding .}"/>
                                        </TextBox.InputBindings>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="LostFocus">
                                                <i:InvokeCommandAction
                                                    Command="{Binding DataContext.LoseItemFocusCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <TextBox
                            MinWidth="100"
                            MaxWidth="200"
                            Margin="10 0 0 0"
                            Text="{Binding DataContext.EditingItemReleaseDate, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverter}}"
                            PreviewTextInput="TextBox_PreviewTextInput" MaxLength="4">
                                        <TextBox.InputBindings>
                                            <KeyBinding  
                                    Key="Esc"
                                    Command="{Binding DataContext.CancelItemEditCommand, RelativeSource={RelativeSource AncestorType=views:MvxWpfView}}"
                                    CommandParameter="{Binding .}"/>
                                        </TextBox.InputBindings>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="LostFocus">
                                                <i:InvokeCommandAction
                                        Command="{Binding DataContext.LoseItemFocusCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </StackPanel>

                                <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal">
                                    <TextBox
                                Margin="0 6 0 0"
                                MinWidth="100"
                                MaxWidth="200"
                                Text="{Binding DataContext.EditingItemCollectionName, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverter}}">
                                        <TextBox.InputBindings>
                                            <KeyBinding 
                                    Key="Esc"
                                    Command="{Binding DataContext.CancelItemEditCommand, RelativeSource={RelativeSource AncestorType=views:MvxWpfView}}"
                                    CommandParameter="{Binding .}"/>
                                        </TextBox.InputBindings>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="LostFocus">
                                                <i:InvokeCommandAction
                                         Command="{Binding DataContext.LoseItemFocusCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </StackPanel>
                            </StackPanel>
                        </Grid>

                        <materialDesign:PopupBox
                            x:Name="popupBoxMenu"
                            Margin="0 0 42 0"
                            IsHitTestVisible="False"
                            materialDesign:StaysOpen="True"
                            materialDesign:IsPopupOpen="{Binding IsPopupOpened, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            HorizontalAlignment="Right"
                            materialDesign:PopupUniformCornerRadius="6"
                            materialDesign:PlacementMode="LeftAndAlignMiddles">
                            <materialDesign:PopupBox.ToggleContent>
                                <materialDesign:PackIcon
                                Width="0"/>   
                            </materialDesign:PopupBox.ToggleContent>

                            <ListBox
                                x:Name="listBoxPopupMenu"
                                BorderThickness="0"
                                HorizontalContentAlignment="Stretch"
                                Padding="0">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignNavigationListBoxItem}">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Margin" Value="4 0 4 2"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>

                                <Grid>
                                    <TextBlock
                                Margin="15 0 0 0"
                                Panel.ZIndex="22"
                                FontSize="18"
                                Foreground="#555"
                                IsHitTestVisible="False"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                Text="Add To Folder"/>

                                    <ComboBox
                                        DropDownClosed="comboBoxChooseFolder_DropDownClosed"
                                        Panel.ZIndex="0"
                                        x:Name="comboBoxChooseFolder"
                                        IsReadOnly="True"
                                        HorizontalContentAlignment="Left"
                                        IsEditable="False"
                                        Padding="0 6 12 6"
                                        BorderThickness="0"
                                        Foreground="Black"
                                        ItemsSource="{Binding DataContext.Folders, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}">
                                        <ComboBox.ItemContainerStyle>
                                            <Style TargetType="ComboBoxItem" BasedOn="{StaticResource MaterialDesignComboBoxItemStyle}">
                                                <Setter Property="Padding" Value="0"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ComboBox.ItemContainerStyle>

                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Button
                                                x:Name="addToFolderBtn"
                                                Command="{Binding DataContext.ToggleItemInFolder, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                                                HorizontalAlignment="Stretch"
                                                BorderThickness="0">
                                                        <Button.CommandParameter>
                                                            <MultiBinding Converter="{StaticResource MultiBindingConverter}">
                                                                <Binding Path="."/>
                                                                <Binding Path="DataContext.SelectedItem" RelativeSource="{RelativeSource AncestorType={x:Type views:IMvxWpfView}}"/>
                                                                <Binding Path="DataContext.SelectedFolder" RelativeSource="{RelativeSource AncestorType={x:Type views:IMvxWpfView}}"/>
                                                            </MultiBinding>
                                                        </Button.CommandParameter>

                                                        <Button.Resources>
                                                            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatLightButton}">
                                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                                                        <Setter Property="IsEnabled" Value="False"/>
                                                                        <Setter Property="Foreground" Value="#555"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Resources>
                                                        <TextBlock
                                                    Foreground="#555"
                                                    Grid.Column="0"
                                                    Text="{Binding Name}"
                                                    TextTrimming="CharacterEllipsis"
                                                    FontSize="18">
                                                        </TextBlock>
                                                    </Button>

                                                    <CheckBox
                                                IsChecked="{Binding IsChecked}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Right"
                                                Margin="0 2 10 0"
                                                IsHitTestVisible="False">
                                                        <CheckBox.Style>
                                                            <Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignCheckBox}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </CheckBox.Style>
                                                    </CheckBox>
                                                </Grid>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </Grid>

                                <Button
                            Background="Transparent"
                            HorizontalAlignment="Stretch"
                            VerticalContentAlignment="Center"
                            Padding="10 0"
                            Margin="-5 -5"
                            Command="{Binding DataContext.DeleteItemFromFolderCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                            CommandParameter="{Binding DataContext.SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}">
                                    <Button.Resources>
                                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatLightButton}">
                                            <Setter Property="Height" Value="45"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#e6e6e6"/>
                                                </Trigger>
                                                <DataTrigger Binding="{Binding DataContext.SelectedFolder.IsDefault, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Resources>
                                 <StackPanel
                                        Orientation="Horizontal">
                                        <TextBlock
                                            Foreground="#555"
                                            Grid.Column="0"
                                            Margin="10 0 0 0"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Text="Remove from folder" 
                                            FontSize="18"/> 
                                        <materialDesign:PackIcon
                                            Grid.Column="1"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Width="22"
                                            Margin="42 0 0 0"
                                            Height="22"
                                            Kind="Remove"/> 
                                    </StackPanel>
                                </Button>

                                <Button
                                    Background="Transparent"
                                    HorizontalAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Padding="10 0"
                                    Margin="-5 -5"
                                    Height="45"
                                    Style="{StaticResource MaterialDesignFlatLightButton}"
                                    Command="{Binding DataContext.DeleteAllItemsCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                                    CommandParameter="{Binding DataContext.SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        Foreground="#888"
                                        FontSize="18"
                                        TextTrimming="CharacterEllipsis">       
                                <StackPanel
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Foreground="#555"
                                        Grid.Column="0"
                                        Margin="10 0 0 0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Text="Remove from all folders" 
                                        FontSize="18"/>
                                    <materialDesign:PackIcon
                                        Grid.Column="1"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Width="22"
                                        Margin="9 0 0 0"
                                        Height="22"
                                        Kind="TrashCan"/>
                                </StackPanel>
                            </TextBlock>
                                </Button>
                            </ListBox>
                        </materialDesign:PopupBox>


                        <Button
                            Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverter}}"
                            Command="{Binding DataContext.SaveEditItemCommand, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}}"
                            CommandParameter="{Binding .}"
                            Margin="0 0 10 0"
                            Focusable="False"
                            Height="40"
                            Grid.Column="2"
                            Grid.Row="0"
                            HorizontalAlignment="Right"
                            IsEnabled="{Binding DataContext.CanSaveItemEdit, RelativeSource={RelativeSource AncestorType={x:Type views:MvxWpfView}}}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource BorderlessButton}">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="TextBlock.Opacity" Value="0.4"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <TextBlock
                                FontWeight="Bold" Padding="15 0" Text="Save" Foreground="#388E3C"/>
                        </Button>
                        <Button
                            Visibility="{Binding IsEditing, Converter={StaticResource BooleanVisibilityConverter}}"
                            Command="{Binding DataContext.CancelItemEditCommand, RelativeSource={RelativeSource AncestorType={x:Type views:IMvxWpfView}}}"
                            CommandParameter="{Binding .}"
                            Style="{StaticResource BorderlessButton}"
                            Margin="0 0 10 0"
                            Height="40"
                            Grid.Column="1"                                
                            Grid.Row="0"
                            HorizontalAlignment="Right">
                            <TextBlock
                                FontWeight="Bold" Padding="15 0" Text="Cancel" Foreground="#a1a1a1"/>
                        </Button>

                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</views:MvxWpfView>
